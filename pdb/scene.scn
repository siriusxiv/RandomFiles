function LoadPDB(property)
	local pdbloader
	pdbloader = PDBLoader()
	pdbloader:Load(property.filepath)
	return pdbloader
end

function CreateLineModel(property)
	local lm = LineModel();
	lm:Create(property.line);
	lm:SetTranslate(property.translate[1], property.translate[2], property.translate[3])
	lm:SetRotate(property.rotate[1], property.rotate[2], property.rotate[3])
	lm:SetScale(property.scale[1], property.scale[2], property.scale[3])
	lm:SetShader(property.shadername)
	lm:SetLineWidth(property.width)
	local uniforms = property.Uniform
	for i,v in pairs(uniforms) do
		if v.type == 'vec4' then
			print('vec4[' .. v.name .. '] = (', v.value[1], v.value[2], v.value[3], v.value[4], ')')
			lm:SetVec4(v.name, v.value[1], v.value[2], v.value[3], v.value[4])
		end
		if v.type == 'vec3' then
			print('vec3[' .. v.name .. '] = (', v.value[1], v.value[2], v.value[3], ')')
			lm:SetVec3(v.name, v.value[1], v.value[2], v.value[3])
		end
		if v.type == 'vec2' then
			print('vec2[' .. v.name .. '] = (', v.value[1], v.value[2], ')')
			lm:SetVec2(v.name, v.value[1], v.value[2])
		end
		if v.type == 'float' then
			print('float[' .. v.name .. '] = (', v.value, ')')
			lm:SetFloat(v.name, v.value)
		end
	end
	function getModel()
		return lm
	end
	return {
		model=getModel
	}
end

function CreateCamera(property)
	local cam;	
	print('create camera',
		property.screensize[1], property.screensize[2],
		property.filename)
	cam = Camera()
	cam:SetScreenSize(property.screensize[1], property.screensize[2])
	cam:SetFilename(property.filename)
	cam:LookAt(
		property.position[1], property.position[2], property.position[3],
		property.target[1], property.target[2], property.target[3],
		property.up[1], property.up[2], property.up[3],
		property.fov
	)
	
	function camera()
		return cam
	end
	return {
		camera = camera
	}
end

function Render(arg)
	render(arg.RenderObject)
end
-- Generated by NodeEditor

local instPDBLoader2 = LoadPDB({filepath='4CL8.pdb'})
local instLineModel4 = CreateLineModel({line=instPDBLoader2:StickData(), translate={0,0,0}, rotate={0,0,0}, scale={1,1,1}, width = 1, shadername='white.frag', Uniform={nil, nil, nil}})
local instCreateCamera2 = CreateCamera({position={0,70,0}, target={0,0,0}, up={1,0,0}, fov = 70, screensize={2048,2048}, filename='foo2.jpg'})
local root4 = Render({RenderObject={RenderObject0=instCreateCamera2:camera(), nil, RenderObject2=instLineModel4:model()}})
-- Generated Footer by NodeEditor
