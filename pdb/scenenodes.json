{"nodeData":[{"name":"CreateCamera","funcname":"CreateCamera","info":"カメラをつくるためのノード","pos":[245.5,14.5],"varname":"instCreateCamera2","customfuncfile":"createcamera.lua","input":[{"name":"position","type":"vec3","value":["0","70","0"]},{"name":"target","type":"vec3","value":["0","0",0]},{"name":"up","type":"vec3","value":["1","0",0]},{"name":"fov","type":"float","value":"70"},{"name":"screensize","type":"vec2","value":["2048","2048"]},{"name":"filename","type":"string","value":"foo2.jpg"}],"output":[{"name":"camera","type":"RenderObject"}],"customfunc":"function CreateCamera(property)\n\tlocal cam;\t\n\tprint('create camera',\n\t\tproperty.screensize[1], property.screensize[2],\n\t\tproperty.filename)\n\tcam = Camera()\n\tcam:SetScreenSize(property.screensize[1], property.screensize[2])\n\tcam:SetFilename(property.filename)\n\tcam:LookAt(\n\t\tproperty.position[1], property.position[2], property.position[3],\n\t\tproperty.target[1], property.target[2], property.target[3],\n\t\tproperty.up[1], property.up[2], property.up[3],\n\t\tproperty.fov\n\t)\n\t\n\tfunction camera()\n\t\treturn cam\n\tend\n\treturn {\n\t\tcamera = camera\n\t}\nend\n"},{"name":"Render","funcname":"Render","info":"レンダリングを行うためのノード","pos":[1266.5,35.5],"varname":"root4","customfuncfile":"render.lua","rootnode":true,"input":[{"name":"RenderObject","type":"RenderObject","array":[{"name":"RenderObject0","type":"RenderObject"},{"name":"RenderObject1","type":"RenderObject"},{"name":"RenderObject2","type":"RenderObject"}]}],"output":[],"customfunc":"function Render(arg)\n\trender(arg.RenderObject)\nend"},{"name":"LoadPDB","funcname":"LoadPDB","info":"PDBファイルを読み込むためのノード","pos":[399,235.75],"varname":"instPDBLoader2","customfuncfile":"pdbloader.lua","input":[{"name":"filepath","type":"string","value":"4CL8.pdb"}],"output":[{"name":"BallData","type":"BufferPointData"},{"name":"StickData","type":"BufferLineData"}],"customfunc":"function LoadPDB(property)\n\tlocal pdbloader\n\tpdbloader = PDBLoader()\n\tpdbloader:Load(property.filepath)\n\treturn pdbloader\nend\n"},{"name":"CreatePointModel","funcname":"CreatePointModel","info":"Pointデータを表示させるためのノード","pos":[778,80.75],"varname":"instPointModel3","customfuncfile":"CreatePointModel.lua","input":[{"name":"point","type":"BufferPointData"},{"name":"translate","type":"vec3","value":["0","-50",0]},{"name":"rotate","type":"vec3","value":[0,0,0]},{"name":"scale","type":"vec3","value":[1,1,1]},{"name":"shadername","type":"string","value":"normal.frag"},{"name":"Uniform","type":"Uniform","array":[{"name":"Uniform0","type":"Uniform"},{"name":"Uniform1","type":"Uniform"},{"name":"Uniform2","type":"Uniform"}]}],"output":[{"name":"model","type":"RenderObject"}],"customfunc":"function CreatePointModel(property)\n\tlocal pm = PointModel();\n\tpm:Create(property.point);\n\tpm:SetTranslate(property.translate[1], property.translate[2], property.translate[3])\n\tpm:SetRotate(property.rotate[1], property.rotate[2], property.rotate[3])\n\tpm:SetScale(property.scale[1], property.scale[2], property.scale[3])\n\tpm:SetShader(property.shadername)\n\tlocal uniforms = property.Uniform\n\tfor i,v in pairs(uniforms) do\n\t\tif v.type == 'vec4' then\n\t\t\tprint('vec4[' .. v.name .. '] = (', v.value[1], v.value[2], v.value[3], v.value[4], ')')\n\t\t\tpm:SetVec4(v.name, v.value[1], v.value[2], v.value[3], v.value[4])\n\t\tend\n\t\tif v.type == 'vec3' then\n\t\t\tprint('vec3[' .. v.name .. '] = (', v.value[1], v.value[2], v.value[3], ')')\n\t\t\tpm:SetVec3(v.name, v.value[1], v.value[2], v.value[3])\n\t\tend\n\t\tif v.type == 'vec2' then\n\t\t\tprint('vec2[' .. v.name .. '] = (', v.value[1], v.value[2], ')')\n\t\t\tpm:SetVec2(v.name, v.value[1], v.value[2])\n\t\tend\n\t\tif v.type == 'float' then\n\t\t\tprint('float[' .. v.name .. '] = (', v.value, ')')\n\t\t\tpm:SetFloat(v.name, v.value)\n\t\tend\n\tend\n\tfunction getModel()\n\t\treturn pm\n\tend\n\treturn {\n\t\tmodel=getModel\n\t}\nend\n"},{"name":"CreateLineModel","funcname":"CreateLineModel","info":"Lineデータを表示させるためのノード","pos":[879,281.75],"varname":"instLineModel4","customfuncfile":"CreateLineModel.lua","input":[{"name":"line","type":"BufferLineData"},{"name":"translate","type":"vec3","value":[0,"0",0]},{"name":"rotate","type":"vec3","value":[0,0,0]},{"name":"scale","type":"vec3","value":[1,1,1]},{"name":"width","type":"float","value":"1"},{"name":"shadername","type":"string","value":"white.frag"},{"name":"Uniform","type":"Uniform","array":[{"name":"Uniform0","type":"Uniform"},{"name":"Uniform1","type":"Uniform"},{"name":"Uniform2","type":"Uniform"}]}],"output":[{"name":"model","type":"RenderObject"}],"customfunc":"function CreateLineModel(property)\n\tlocal lm = LineModel();\n\tlm:Create(property.line);\n\tlm:SetTranslate(property.translate[1], property.translate[2], property.translate[3])\n\tlm:SetRotate(property.rotate[1], property.rotate[2], property.rotate[3])\n\tlm:SetScale(property.scale[1], property.scale[2], property.scale[3])\n\tlm:SetShader(property.shadername)\n\tlm:SetLineWidth(property.width)\n\tlocal uniforms = property.Uniform\n\tfor i,v in pairs(uniforms) do\n\t\tif v.type == 'vec4' then\n\t\t\tprint('vec4[' .. v.name .. '] = (', v.value[1], v.value[2], v.value[3], v.value[4], ')')\n\t\t\tlm:SetVec4(v.name, v.value[1], v.value[2], v.value[3], v.value[4])\n\t\tend\n\t\tif v.type == 'vec3' then\n\t\t\tprint('vec3[' .. v.name .. '] = (', v.value[1], v.value[2], v.value[3], ')')\n\t\t\tlm:SetVec3(v.name, v.value[1], v.value[2], v.value[3])\n\t\tend\n\t\tif v.type == 'vec2' then\n\t\t\tprint('vec2[' .. v.name .. '] = (', v.value[1], v.value[2], ')')\n\t\t\tlm:SetVec2(v.name, v.value[1], v.value[2])\n\t\tend\n\t\tif v.type == 'float' then\n\t\t\tprint('float[' .. v.name .. '] = (', v.value, ')')\n\t\t\tlm:SetFloat(v.name, v.value)\n\t\tend\n\tend\n\tfunction getModel()\n\t\treturn lm\n\tend\n\treturn {\n\t\tmodel=getModel\n\t}\nend\n"}],"plugData":[{"output":{"node":"instCreateCamera2","plug":"camera"},"input":{"node":"root4","plug":"RenderObject0"}},{"output":{"node":"instPDBLoader2","plug":"BallData"},"input":{"node":"instPointModel3","plug":"point"}},{"output":{"node":"instPointModel3","plug":"model"},"input":{"node":"root4","plug":"RenderObject1"}},{"output":{"node":"instPDBLoader2","plug":"StickData"},"input":{"node":"instLineModel4","plug":"line"}},{"output":{"node":"instLineModel4","plug":"model"},"input":{"node":"root4","plug":"RenderObject2"}}]}
